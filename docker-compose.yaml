version: '3.8'

services:
  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres

    ports:
      - '5432:5432'

    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend
  
  redis:
    image: redis:latest
    ports:
      - "6379"
    volumes:
      - redis_data:/d1ata
    networks:
      - backend
  
  vacation-service:
    build:
      context: ./vacation-service
      dockerfile: ./Api/Dockerfile
    networks:
      - backend
    ports:
      - "8000:8080"
    restart: always
  
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/logs:/var/log/nginx
      - /etc/letsencrypt:/etc/letsencrypt
    networks:
      - backend
    restart: unless-stopped
  
  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    env_file:
      - ./notification-service/.env
    ports:
      - "8001:8001"
    restart: always
    networks:
      - backend

  notification-service-worker:
    build:
      context: ./notification-service
      dockerfile: Dockerfile.worker
    env_file:
      - ./notification-service/.env
    restart: always
    networks:
      - backend

  file-service:
    build:
      context: ./file-service
      dockerfile: Dockerfile
    networks:
      - backend
    ports:
      - "3000:3000"
    restart: always
  
  document-service:
    build:
      context: ./document-service
      dockerfile: Dockerfile
    networks:
      - backend
    ports:
      - "8002:8002"
    restart: always
    
    
volumes:
  pgdata:
  redis_data:

networks:
  backend:
    driver: bridge